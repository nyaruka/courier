name: CI
on: [push, pull_request]
env:
  go-version: "1.17.7"
  redis-version: "3.2.4"
jobs:
  test:
    name: Test
    strategy:
      matrix:
        pg-version: ["12", "13"]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install Redis
        uses: zhulik/redis-action@v1.0.0
        with:
          redis version: ${{ env.redis-version }}

      - name: Install PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql version: ${{ matrix.pg-version }}
          postgresql db: courier_test
          postgresql user: courier
          postgresql password: courier

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.go-version }}

      - name: Run tests
        run: go test -p=1 -coverprofile=coverage.text -covermode=atomic ./...

      - name: Upload coverage
        if: success()
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.go-version }}

      - name: Publish release
        uses: goreleaser/goreleaser-action@v1
        if: ${{ !contains(github.ref, '-') }}
        with:
          version: v0.147.2
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish non-master release
        uses: goreleaser/goreleaser-action@v1
        if: contains(github.ref, '-')
        with:
          version: v0.147.2
          args: release --rm-dist --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
